@page
@model Spoonful.Pages.Aaron.IndexModel
@{
    ViewData["Title"] = "Grocery Tracker";
}

<script type="text/javascript" src="https://code.jquery.com/jquery-1.7.1.min.js"></script>
<style>
    table, th, td {
        border: 1px solid black;
    }
</style>

<div class="row">
    
    <!-- Buttons -->
    <div>

            <a class="btn btn-primary" href="/Aaron/Grocery%20Tracker/AddEntry">Add Entry</a>

            <div style =" display: inline-block;">
                <a id="shoppingList" class="btn btn-secondary" type="button" href="/Aaron/Shopping%20List/ShoppingList">Shopping List</a>
            </div>
        
        <div class="row mb-3">
            <form id="sortFilterDropdown" method="post">
                <label for="sortFilter">Sort By:</label>
                <select name="sortFilter" id="filters" asp-for="sortFilter" onchange="sortFilterDropdown.submit()">
                    <option value="name">Name</option>
                    <option value="category">Category</option>
                    <option value="purchase">Purchase</option>
                    <option value="expiry">Expiry</option>
                </select>
                @*<input type="submit" value="Sort" class="btn btn-secondary" />*@
            </form>
        </div>
    </div>


    <div class="row mb-3">
    <br/> <br/>
    <!-- Table -->
        <table>
            <!-- Table Headers -->
            <tr>
                <th>@Html.DisplayNameFor(model => model.DiaryList[0].Name)</th>
                <th>@Html.DisplayNameFor(model => model.DiaryList[0].Category)</th>
                <th>@Html.DisplayNameFor(model => model.DiaryList[0].Purchase)</th>
                <th>@Html.DisplayNameFor(model => model.DiaryList[0].Expiry)</th>
                <th></th>
            </tr>
            <!-- Table Items -->
            @{
                @foreach (var entry in Model.DiaryList)
                {
                    <tr>
                        <td>@entry.Name</td>
                        <td>@entry.Category</td>
                        <td>@entry.Purchase.ToShortDateString()</td>
                        @{
                            @if(DateTime.Today > @entry.Expiry)
                            {
                                <td style="color:red;">@entry.Expiry.ToShortDateString() (Expired!)</td>
                            } else
                            {
                                <td>@entry.Expiry.ToShortDateString()</td>
                            }
                        }
                        
                        <td>
                            <a class="btn btn-secondary" href="/Aaron/Grocery%20Tracker/Edit?id=@entry.Id" >Edit</a>
                            <a class="btn btn-danger" href="/Aaron/Grocery%20Tracker/Delete?id=@entry.Id">Delete</a>
                        
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this entry?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button id="Delete" type="submit" value="clicked_id" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function getId(clicked_id) {
        this.clickId = clicked_id;
    }
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}