@page
@model Spoonful.Pages.Driver.MyrouteModel
@{
    ViewData["Title"] = "My Route";
}
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
@Html.AntiForgeryToken()
<link href="https://cdn.jsdelivr.net/npm/simple-datatables@latest/dist/style.css" rel="stylesheet" type="text/css">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
<h1 class="display-4">@ViewData["Title"]</h1>

<div id="map"></div>
@if(@Model.routeId != -1)
{
    <input type="hidden" id="region" value="@Model.MyRoute.Region"/>
}else
{
    <input type="hidden" id="region" value="1"/>
    <h3>Route has not been assigned yet</h3>
}

<div class="card" style="padding:10px; margin-top:30px; margin-bottom:50px;">
    <div class="card-body">
    <table class="table table-striped" id="Myroute-table">
        <thead>
            <tr>
                <th>Delivery Id</th>
                <th>@Html.DisplayNameFor(model => model.deliveries[0].Stops.Address)</th>
                <th>Delivered Time</th>
                <th>Confirmation</th>
            </tr>
        </thead>
        <tbody>
            @{
                            @foreach (var item in Model.deliveries)
                {
                                <tr>
                                    <td>@item.Id</td>
                                    <td>@item.OrderDetails.Address</td>
                                    @if(@item.deliveryDateTime == null)
                        {
                                        <td>Not delivered yet</td>
                        }else
                        {
                                        <td>@item.deliveryDateTime</td>
                        }
                                    <td>
                                        @if(@item.status == "Scheduled")
                            {
                                    
                                            <button type="button" class="blue-btn-full withdrawal-stat-btn" data-bs-toggle="modal"
                                                data-bs-target="#myModal_@item.Id">
                                                @item.status
                                            </button>
                            }else
                            {
                                            <button type="button" class="green-btn-full">
                                                @item.status
                                            </button>
                            }
                                        <form method="post" enctype="multipart/form-data">
                                            <div class="modal " id="myModal_@item.Id">
                                                <div class="modal-dialog modal-lg modal-dialog-centered">
                                                    <div class="modal-content">

                                                        <div class="modal-header">
                                                            <h4 class="modal-title">Delivery Status</h4>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                                        </div>

                                                        <div class="modal-body">
                                                            <input type="hidden" value="@item.Id" asp-for="Id"/>
                                                            <input type="file" accept="image/*" class="form-control" asp-for="Upload" onchange="showImgPreview(this)" />
                                                            <img id="imgPreview" class="" style="height:300px;width:300px;object-fit:cover" src="/uploads/placeholder.jpg" />
                                                        </div>

                                                        <div class="modal-footer">
                                                            <button type="button" class="light-btn" data-bs-dismiss="modal">Back</button>
                                                            <button type="submit" class="green-btn-25 confirm">Save Changes</button>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </td>
                                </tr>
                }
            }
        </tbody>
    </table>
    @*<div class="d-flex">
        <button class="blue-btn flex-fill" onclick="location.href='/Admin/VoucherManagement/Add'">Add Voucher</button>
        <button class="light-btn flex-fill"onclick="location.href='/Admin/VoucherManagement/SentEmails  '">View Sent Emails</button>
    </div>*@
    </div>
</div>

<script async
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD2XNaPPSnBj0i6cUEE4bk4c6KdU7tA4kU&callback=initMap">
</script>

@section Scripts
{
    <script>
      $(document).ready(function () {
        const r_table = document.getElementById('Myroute-table');
        let routeTable = new simpleDatatables.DataTable(r_table);

        var route = $("#region").val()
        console.log(route)
        var mappy = document.getElementById("map");
        console.log(mappy)
        console.log("Hello")
        $.ajax({
            type: "POST",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val())
            },
            dataType: "json",
            data: { route: route },
            url: "/Driver/Myroute?handler=RetrieveRoute",
            success: function (data) {
                console.log(data.list)
                if (data.list != "null") {
                    var list = data.list
                    var last = list[list.length - 1] + ", singapore"
                    list.pop();
                    console.log(last)
                    console.log(list)
                    const directionsService = new google.maps.DirectionsService();
                    const directionsRenderer = new google.maps.DirectionsRenderer();
                    const map = new google.maps.Map(document.getElementById("map"), {
                        zoom: 11,
                        center: { lat: 1.3742002339365351, lng: 103.81540409330088 },
                    });
                    directionsRenderer.setMap(map);

                    const waypts = [];

                    for (let i = 0; i < list.length; i++) {
                        waypts.push({
                            location: list[i] + ", singapore",
                            stopover: true,
                        });
                    }

                    console.log(waypts)

                    directionsService
                        .route({
                            origin: "768442, singapore",
                            destination: last,
                            waypoints: waypts,
                            optimizeWaypoints: true,
                            travelMode: google.maps.TravelMode.DRIVING,
                        })
                        .then((response) => {
                            directionsRenderer.setDirections(response);
                        })
                        .catch((e) => window.alert("Directions request failed due to " + status));
                    mappy.scrollIntoView({ behavior: "smooth", block: "end", inline: "nearest" });
                } else {
                    console.log("Invalid RouteID/ Route id not present")
                }
            }
        })

        
        function initMap() {
            const directionsService = new google.maps.DirectionsService();
            const directionsRenderer = new google.maps.DirectionsRenderer();
            const map = new google.maps.Map(document.getElementById("map"), {
                zoom: 11,
                center: { lat: 1.3742002339365351, lng: 103.81540409330088 },
            });
            directionsRenderer.setMap(map);

            const onChangeHandler = function () {
                calculateAndDisplayRoute(directionsService, directionsRenderer);
            };
            document.getElementById("submit").addEventListener("click", () => {
                calculateAndDisplayRoute(directionsService, directionsRenderer);
            });

            document.getElementById("start").addEventListener("change", onChangeHandler);
            document.getElementById("end").addEventListener("change", onChangeHandler);
        }
        window.initMap = initMap;

        function showImgPreview(input) {
		    if (input.files[0]) {
			    var uploadimg = new FileReader();
			    uploadimg.onload = function(displayimg) {
				    $("#imgPreview").attr('src', displayimg.target.result);
			    }
			    uploadimg.readAsDataURL(input.files[0]);
		    }
	    }

      });
    </script>

    <script src="https://cdn.jsdelivr.net/npm/simple-datatables@latest" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"
    integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13"
    crossorigin="anonymous"></script>
}
<script>
    function showImgPreview(input) {
		    if (input.files[0]) {
			    var uploadimg = new FileReader();
			    uploadimg.onload = function(displayimg) {
				    $("#imgPreview").attr('src', displayimg.target.result);
			    }
			    uploadimg.readAsDataURL(input.files[0]);
		    }
	    }
</script>

<style>
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }
</style>